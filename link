#!/bin/bash

timestamp=$(date +%Y-%m-%dT%H:%M:%S)
filesDir=~/cfg/cfg-files
backupDir=~/cfg/cfg-backup
timestampDir=~/cfg/cfg-backup/$timestamp
files=($(cd $filesDir ; git ls-tree master --name-only)) # get tracked config files
files=(${files[@]//README*/})  # exclude README
unlink=false

# parse "--unlink" option from command line (using standard idiom)
while test $# -gt 0
do
  case "$1" in
    --unlink) unlink=true
      ;;
    --*) echo "Error: invalid option $1"; exit 0
      ;;
  esac
  shift
done

for fileName in ${files[@]}; do
  homeFile=~/$fileName
  cfgFile=$filesDir/$fileName
  backupFile=$backupDir/$fileName
  timestampFile=$timestampDir/$fileName

  # if unlink option was specified, remove symlinks if they exist
  # and restore original configuration files from backups
  if [ "$unlink" = true ] ; then
    echo "Unlinking $fileName"

    # only unlink if the symlink exists
    if [ -L $homeFile ] ; then
      unlink $homeFile
    fi

    # only restore if a backup file exists (-f checks for file, -d for checks directory)
    if [ -f $backupFile ] || [ -d $backupFile ] ; then
      echo "$backupFile exists; restoring as $homeFile"
      mv $backupFile $homeFile
    fi

  # if unlink option was not specified, create a symlink for each configuration file
  # and create backup versions of configuration files that already exist
  else
    echo "Linking $fileName"

    # only create a backup if the file exists (-f checks for file, -d for checks directory)
    if [ -f $homeFile ] || [ -d $homeFile ] ; then
      echo "$homeFile exists; backing up as $backupFile and $timestampFile"
      mkdir -p $backupDir
      mkdir -p $timestampDir
      cp -r $homeFile $backupFile
      cp -r $homeFile $timestampFile

      # ensure the backup was created; exit if not
      if [ -f $backupFile ] || [ -d $backupFile ] ; then
        rm -rf $homeFile
      else
        echo "Error: could not create backup of $homeFile"
        exit 0
      fi
    fi

    # if the file exists, create a symlink
    if [ -f $cfgFile ] ; then
      ln -sf $cfgFile $homeFile
    # if the file exists as a directory, need to use a slightly different symlink command
    elif [ -d $cfgFile ] ; then
      ln -sf $cfgFile ~
    fi
  fi
done
